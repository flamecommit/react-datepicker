{"ast":null,"code":"\"use client\";\n\nimport * as React from \"react\";\nvar NAME_SPACE = \"react-datepicker\";\nfunction DatepickerContainer() {\n  // 인수가 없을 땐 현재 시간을 반환한다.\n  var NEW_DATE = new Date(); // Sat Sep 02 2023 08:25:59 GMT+0900 (한국 표준시)\n  // 인수가 문자열 타임스태프 일땐 Month를 1부터 카운트한다.\n  var NEW_DATE2 = new Date(\"2023-09-01\"); // Sat Sep 02 2023 08:25:59 GMT+0900 (한국 표준시)\n  // 인수가 숫자형일땐 Month를 0부터 카운트한다. 시간을 생략하면 00시00분00초를 기준으로 한다.\n  var NEW_DATE3 = new Date(2023, 9, 1); // Sat Sep 02 2023 08:25:59 GMT+0900 (한국 표준시)\n  var NEW_DATE4 = new Date(2023, 9, 1, 12, 0, 0); // Sat Sep 02 2023 08:25:59 GMT+0900 (한국 표준시)\n  console.log(0, NEW_DATE);\n  console.log(2, NEW_DATE2);\n  console.log(3, NEW_DATE3);\n  console.log(4, NEW_DATE4);\n  console.log(NEW_DATE.getUTCHours());\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"\".concat(NAME_SPACE, \"__input-container\")\n  }, React.createElement(\"input\", {\n    type: \"text\"\n  })), React.createElement(\"div\", {\n    className: \"\".concat(NAME_SPACE, \"__wrapper\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(NAME_SPACE, \"__controller\")\n  }, \"Controller\"), React.createElement(\"div\", {\n    className: \"\".concat(NAME_SPACE, \"__container\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(NAME_SPACE, \"__month-view\")\n  }), React.createElement(\"div\", {\n    className: \"\".concat(NAME_SPACE, \"__year-view\")\n  }), React.createElement(\"div\", {\n    className: \"\".concat(NAME_SPACE, \"__decade-view\")\n  }), React.createElement(\"div\", {\n    className: \"\".concat(NAME_SPACE, \"__century-view\")\n  }))));\n}\nexport default DatepickerContainer;","map":{"version":3,"names":["React","NAME_SPACE","DatepickerContainer","NEW_DATE","Date","NEW_DATE2","NEW_DATE3","NEW_DATE4","console","log","getUTCHours","createElement","Fragment","className","concat","type"],"sources":["C:/Users/user/Desktop/repositories/personal/react-datepicker/package/dist/esm/components/DatepickerContainer.js"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\nvar NAME_SPACE = \"react-datepicker\";\nfunction DatepickerContainer() {\n    // 인수가 없을 땐 현재 시간을 반환한다.\n    var NEW_DATE = new Date(); // Sat Sep 02 2023 08:25:59 GMT+0900 (한국 표준시)\n    // 인수가 문자열 타임스태프 일땐 Month를 1부터 카운트한다.\n    var NEW_DATE2 = new Date(\"2023-09-01\"); // Sat Sep 02 2023 08:25:59 GMT+0900 (한국 표준시)\n    // 인수가 숫자형일땐 Month를 0부터 카운트한다. 시간을 생략하면 00시00분00초를 기준으로 한다.\n    var NEW_DATE3 = new Date(2023, 9, 1); // Sat Sep 02 2023 08:25:59 GMT+0900 (한국 표준시)\n    var NEW_DATE4 = new Date(2023, 9, 1, 12, 0, 0); // Sat Sep 02 2023 08:25:59 GMT+0900 (한국 표준시)\n    console.log(0, NEW_DATE);\n    console.log(2, NEW_DATE2);\n    console.log(3, NEW_DATE3);\n    console.log(4, NEW_DATE4);\n    console.log(NEW_DATE.getUTCHours());\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"\".concat(NAME_SPACE, \"__input-container\") },\n            React.createElement(\"input\", { type: \"text\" })),\n        React.createElement(\"div\", { className: \"\".concat(NAME_SPACE, \"__wrapper\") },\n            React.createElement(\"div\", { className: \"\".concat(NAME_SPACE, \"__controller\") }, \"Controller\"),\n            React.createElement(\"div\", { className: \"\".concat(NAME_SPACE, \"__container\") },\n                React.createElement(\"div\", { className: \"\".concat(NAME_SPACE, \"__month-view\") }),\n                React.createElement(\"div\", { className: \"\".concat(NAME_SPACE, \"__year-view\") }),\n                React.createElement(\"div\", { className: \"\".concat(NAME_SPACE, \"__decade-view\") }),\n                React.createElement(\"div\", { className: \"\".concat(NAME_SPACE, \"__century-view\") })))));\n}\nexport default DatepickerContainer;\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,IAAIC,UAAU,GAAG,kBAAkB;AACnC,SAASC,mBAAmBA,CAAA,EAAG;EAC3B;EACA,IAAIC,QAAQ,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3B;EACA,IAAIC,SAAS,GAAG,IAAID,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;EACxC;EACA,IAAIE,SAAS,GAAG,IAAIF,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACtC,IAAIG,SAAS,GAAG,IAAIH,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChDI,OAAO,CAACC,GAAG,CAAC,CAAC,EAAEN,QAAQ,CAAC;EACxBK,OAAO,CAACC,GAAG,CAAC,CAAC,EAAEJ,SAAS,CAAC;EACzBG,OAAO,CAACC,GAAG,CAAC,CAAC,EAAEH,SAAS,CAAC;EACzBE,OAAO,CAACC,GAAG,CAAC,CAAC,EAAEF,SAAS,CAAC;EACzBC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACO,WAAW,CAAC,CAAC,CAAC;EACnC,OAAQV,KAAK,CAACW,aAAa,CAACX,KAAK,CAACY,QAAQ,EAAE,IAAI,EAC5CZ,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAEE,SAAS,EAAE,EAAE,CAACC,MAAM,CAACb,UAAU,EAAE,mBAAmB;EAAE,CAAC,EAChFD,KAAK,CAACW,aAAa,CAAC,OAAO,EAAE;IAAEI,IAAI,EAAE;EAAO,CAAC,CAAC,CAAC,EACnDf,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAEE,SAAS,EAAE,EAAE,CAACC,MAAM,CAACb,UAAU,EAAE,WAAW;EAAE,CAAC,EACxED,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAEE,SAAS,EAAE,EAAE,CAACC,MAAM,CAACb,UAAU,EAAE,cAAc;EAAE,CAAC,EAAE,YAAY,CAAC,EAC9FD,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAEE,SAAS,EAAE,EAAE,CAACC,MAAM,CAACb,UAAU,EAAE,aAAa;EAAE,CAAC,EAC1ED,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAEE,SAAS,EAAE,EAAE,CAACC,MAAM,CAACb,UAAU,EAAE,cAAc;EAAE,CAAC,CAAC,EAChFD,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAEE,SAAS,EAAE,EAAE,CAACC,MAAM,CAACb,UAAU,EAAE,aAAa;EAAE,CAAC,CAAC,EAC/ED,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAEE,SAAS,EAAE,EAAE,CAACC,MAAM,CAACb,UAAU,EAAE,eAAe;EAAE,CAAC,CAAC,EACjFD,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAEE,SAAS,EAAE,EAAE,CAACC,MAAM,CAACb,UAAU,EAAE,gBAAgB;EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrG;AACA,eAAeC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}